<!-- Blog Post Template -->
<div class="blog-container">
  <!-- Hero Section -->
  <div class="blog-hero">
    <div class="blog-image-container">
      <img src="{{blog.image}}" alt="{{blog.title}}" class="blog-hero-image">
      <div class="blog-meta">
        <span class="blog-date">
          <i class="fas fa-calendar-alt"></i>
          {{blog.date}}
        </span>
        <span class="blog-category">
          <i class="fas fa-folder"></i>
          {{blog.category}}
        </span>
      </div>
    </div>
  </div>

  <!-- Content Section -->
  <div class="blog-content-wrapper">
    <div class="blog-header">
      <h1 class="blog-title">{{blog.title}}</h1>
      <div class="blog-author">
        <img src="{{blog.author.avatar}}" alt="{{blog.author.name}}" class="author-avatar">
        <div class="author-info">
          <span class="author-name">{{blog.author.name}}</span>
          <span class="author-role">{{blog.author.role}}</span>
        </div>
      </div>
    </div>

    <div class="blog-content">
      {{{blog.content}}}
    </div>

    <!-- Tags Section -->
    <div class="blog-tags">
      {{#each blog.tags}}
        <span class="tag">{{this}}</span>
      {{/each}}
    </div>

    <!-- Share Section -->
    <div class="blog-share">
      <h4>Share this post</h4>
      <div class="share-buttons">
        <a href="https://twitter.com/intent/tweet?url={{encodeURIComponent url}}&text={{encodeURIComponent blog.title}}" class="share-button twitter" target="_blank">
          <i class="fab fa-twitter"></i>
        </a>
        <a href="https://www.facebook.com/sharer/sharer.php?u={{encodeURIComponent url}}" class="share-button facebook" target="_blank">
          <i class="fab fa-facebook-f"></i>
        </a>
        <a href="https://www.linkedin.com/shareArticle?mini=true&url={{encodeURIComponent url}}&title={{encodeURIComponent blog.title}}" class="share-button linkedin" target="_blank">
          <i class="fab fa-linkedin-in"></i>
        </a>
      </div>
    </div>

    <!-- Related Posts -->
    {{#if relatedPosts}}
    <div class="related-posts">
      <h3>Related Posts</h3>
      <div class="related-posts-grid">
        {{#each relatedPosts}}
        <a href="/blog/{{this.slug}}" class="related-post-card">
          <img src="{{this.image}}" alt="{{this.title}}" class="related-post-image">
          <div class="related-post-content">
            <h4>{{this.title}}</h4>
            <p>{{this.excerpt}}</p>
          </div>
        </a>
        {{/each}}
      </div>
    </div>
    {{/if}}
  </div>
</div>

<style>
  .blog-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .blog-hero {
    margin-bottom: 3rem;
  }

  .blog-image-container {
    position: relative;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .blog-hero-image {
    width: 100%;
    height: 500px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .blog-meta {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1.5rem;
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    color: white;
    display: flex;
    gap: 1rem;
  }

  .blog-meta span {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
  }

  .blog-content-wrapper {
    max-width: 800px;
    margin: 0 auto;
  }

  .blog-header {
    margin-bottom: 2rem;
  }

  .blog-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .blog-author {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .author-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
  }

  .author-info {
    display: flex;
    flex-direction: column;
  }

  .author-name {
    font-weight: 600;
    color: var(--bs-primary);
  }

  .author-role {
    font-size: 0.9rem;
    color: #666;
  }

  .blog-content {
    font-size: 1.1rem;
    line-height: 1.8;
    color: #333;
  }

  .blog-content p {
    margin-bottom: 1.5rem;
  }

  .blog-content h2 {
    margin: 2rem 0 1rem;
    font-weight: 600;
  }

  .blog-tags {
    margin: 3rem 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    padding: 0.5rem 1rem;
    background-color: #f0f0f0;
    border-radius: 2rem;
    font-size: 0.9rem;
    color: #666;
    transition: all 0.3s ease;
  }

  .tag:hover {
    background-color: var(--bs-primary);
    color: white;
  }

  .blog-share {
    margin: 3rem 0;
    text-align: center;
  }

  .share-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 1rem;
  }

  .share-button {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    transition: transform 0.3s ease;
  }

  .share-button:hover {
    transform: translateY(-3px);
  }

  .twitter { background-color: #1DA1F2; }
  .facebook { background-color: #4267B2; }
  .linkedin { background-color: #0077B5; }

  .related-posts {
    margin-top: 4rem;
    padding-top: 3rem;
    border-top: 1px solid #eee;
  }

  .related-posts h3 {
    margin-bottom: 2rem;
    font-weight: 600;
  }

  .related-posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .related-post-card {
    text-decoration: none;
    color: inherit;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
  }

  .related-post-card:hover {
    transform: translateY(-5px);
  }

  .related-post-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .related-post-content {
    padding: 1rem;
  }

  .related-post-content h4 {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .related-post-content p {
    font-size: 0.9rem;
    color: #666;
    margin: 0;
  }

  @media (max-width: 768px) {
    .blog-container {
      padding: 1rem;
    }

    .blog-hero-image {
      height: 300px;
    }

    .blog-title {
      font-size: 2rem;
    }

    .blog-content {
      font-size: 1rem;
    }
  }
</style>

<!-- Add marked library -->
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

<script>
async function fetchAndRenderBlogContent() {
    try {
        // Get contentId and title from URL
        const pathParts = window.location.pathname.split('/');
        const contentId = pathParts[pathParts.length - 1];
        const encodedTitle = pathParts[pathParts.length - 2];
        const title = decodeURIComponent(encodedTitle.replace(/-/g, ' '));

        // Fetch content from API
        const response = await fetch(`https://airbrush-admin-backend.onrender.com/api/content/id/${contentId}`);
        if (!response.ok) {
            throw new Error('Failed to fetch blog content');
        }

        const content = await response.json();
        console.log(content, 'content');
        
        // Find the specific blog post from fields array that matches the title
        const blogPost = content.fields.find(field => {
            const fieldTitle = field.value.title || '';
            return fieldTitle.toLowerCase() === title.toLowerCase();
        });

        if (!blogPost) {
            console.error('Blog post not found');
            window.location.href = '/404';
            return;
        }
  
        // Update the page content
        document.querySelector('.blog-hero-image').src = blogPost.value.url || '/images/placeholder.png';
        document.querySelector('.blog-hero-image').alt = blogPost.value.title;
        document.querySelector('.blog-date').textContent = formatDate(blogPost.value.date);
        document.querySelector('.blog-category').textContent = blogPost.value.category || 'Uncategorized';
        document.querySelector('.blog-title').textContent = blogPost.value.title;
        
        // Update author information if available
        const authorName = blogPost.value.author?.name || 'Anonymous';
        const authorRole = blogPost.value.author?.role || 'Contributor';
        const authorAvatar = blogPost.value.author?.avatar || '/images/default-avatar.png';
        
        document.querySelector('.author-name').textContent = authorName;
        document.querySelector('.author-role').textContent = authorRole;
        document.querySelector('.author-avatar').src = authorAvatar;
        
        // Update content using marked.parse()
        const contentHtml = marked.parse(blogPost.value.content || '');
        document.querySelector('.blog-content').innerHTML = contentHtml;
        
        // Update tags
        const tagsContainer = document.querySelector('.blog-tags');
        tagsContainer.innerHTML = '';
        if (blogPost.value.tags && Array.isArray(blogPost.value.tags)) {
            blogPost.value.tags.forEach(tag => {
                const tagSpan = document.createElement('span');
                tagSpan.className = 'tag';
                tagSpan.textContent = tag;
                tagsContainer.appendChild(tagSpan);
            });
        }

        // Update share buttons with current URL
        const currentUrl = window.location.href;
        const encodedUrl = encodeURIComponent(currentUrl);
        const encodedBlogTitle = encodeURIComponent(blogPost.value.title);
        
        document.querySelector('.share-button.twitter').href = `https://twitter.com/intent/tweet?url=${encodedUrl}&text=${encodedBlogTitle}`;
        document.querySelector('.share-button.facebook').href = `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`;
        document.querySelector('.share-button.linkedin').href = `https://www.linkedin.com/shareArticle?mini=true&url=${encodedUrl}&title=${encodedBlogTitle}`;

    } catch (error) {
        console.error('Error fetching blog content:', error);
        window.location.href = '/404';
    }
}

function formatDate(dateString) {
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('en-US', {
            day: 'numeric',
            month: 'short',
            year: 'numeric'
        });
    } catch (e) {
        console.warn('Error formatting date:', e);
        return new Date().toLocaleDateString('en-US', {
            day: 'numeric',
            month: 'short',
            year: 'numeric'
        });
    }
}

// Call the function when the page loads
document.addEventListener('DOMContentLoaded', fetchAndRenderBlogContent);
</script> 