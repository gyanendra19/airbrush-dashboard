{{!-- Imagination Section Styles --}}
<style>
    .imagination-section {
        background-size: cover;
        margin-top: 12rem;
        background-position: center;
        background-repeat: no-repeat;
        color: #ffffff;
        height: 55vh;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
                transition: all 0.2s ease-in;

    }

    .imagination-container {
        width: 85%;
        height: 50vh;
        display: flex;
        margin-inline: auto;
        align-items: center;
        overflow: hidden;
        position: relative;
        justify-content: space-between;
        gap: 4rem;
        padding-left: 6rem;
        background: rgb(0, 0, 0);
        border-radius: 16px;
        backdrop-filter: blur(5px);
        transition: transform 0.8s ease;
    }

    .imagination-container-white {
        width: 80%;
        height: 50vh;
        display: flex;
        margin-inline: auto;
        align-items: center;
        overflow: hidden;
        position: absolute;
        top: 0;
        left: 10%;
        color: black;
        justify-content: space-between;
        gap: 4rem;
        padding-bottom: 3rem;
        background: linear-gradient(to bottom, #f5f5f3, #f7f4f4);
        border-radius: 16px;
        backdrop-filter: blur(5px);
        transition: transform 0.8s ease;
        pointer-events: none;
        transition: all 0.2s ease-in;
    }

    .imagination-container-white.active {
        opacity: 1;
        pointer-events: all;
    }

    .imagination-content {
        left: 5%;
        top: 10%;
        z-index: 100;
        margin-bottom: 0px !important;
    }

    .imagination-title {
        font-size: 3.5rem;
        font-weight: bold;
        line-height: 1.2;
        margin-bottom: 1rem;
    }

    .imagination-title-white {
        font-size: 4rem;
        font-weight: bold;
        line-height: 1.2;
        margin-bottom: 1rem;
        color: black;
    }


    .imagination-title .highlight {
        background: linear-gradient(45deg, #6b46c1, #f56565, #ed8936);
        !important -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    .imagination-title-white .highlight {
        background: linear-gradient(45deg, #6b46c1, #f56565, #ed8936);
        !important -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    .imagination-subtitle {
        font-size: 1.6rem;
        color: #a0aec0;
        margin-bottom: 2rem;
        max-width: 400px;
    }

    .imagination-start-button {
        background: #4526B1;
        color: white;
        padding: 1rem 5rem;
        border-radius: 8px;
        margin-bottom: 3rem;
        font-size: 2.2rem;
        width: fit-content;
        font-weight: bold;
        border: none;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .imagination-start-button:hover {
        background: #553c9a;
    }

    .imagination-model-preview {
        display: flex;
        top: 0%;
        right: 0%;
        margin-right: 20px;
        justify-content: center;
        align-items: center;
    }


    .hero-section-image{
        position: relative;
        height: 315px;
        width: 375px;
    }

    .imagination-model-preview video{
        height: 300px;
        position: absolute;
        right: 0;
    }

    .hero-section-image img{
        position: absolute;
        height: 100%;
        top: 0%;
        right: 0%;
        border-radius: 12px;
        height: 100%;
    }

    @media (max-width: 380px){
        .imagination-section {
            height: fit-content;
        }

        .imagination-container {
            flex-direction: column;
            height: 100vh;
        }

    }

    @media (max-width: 768px) {
        .imagination-section {
            margin-bottom: 2rem;
            height: fit-content;
        }

        .hero-section-image img{
            height: 26%;
            position: static;
        }

        .hero-section-image{
            height: 100%;
            width: 100%;
        }

        .hero-section-image img{
            height: 100%;
            position: static;
        }
        .imagination-container {
            height: 100%;
            flex-direction: column;
            text-align: center;
            gap: 2rem;
            padding-left: 0;
        /* height: 100vh; */
            width: 100%;
            border-radius: 0;
        }

        .imagination-content{
            top: 0%;
            padding: 1rem;
        }

        .imagination-model-preview{
            margin-bottom: 2rem;
            width: 60%;
            margin-inline: auto;
        }

        .imagination-model-preview video {
            height: 350px;
        }

        .imagination-title {
            font-size: 3rem;
        }

        .imagination-subtitle {
            margin: 1rem auto 2rem;
        }
    }

    .slider-controls {
        display: none;
    }

    .containers-wrapper {
        position: relative;
        width: 90%;
        height: 100%;
        border-radius: 16px;
        overflow: hidden;
    }
</style>

{{!-- Imagination Section Content --}}
<section class="imagination-section">
    <div class="containers-wrapper">
        <div class="imagination-container" id="container1">
            <div class="imagination-content">
                <h1 class="imagination-title">
                   
                </h1>
                <p class="imagination-subtitle">
                  
                </p>
             <button class="imagination-start-button">Start</button>
            </div>
            <div class="imagination-model-preview">
                <video autoplay loop muted playsinline>
                    <source src="" type="video/mp4">
                </video>
                <div class="hero-section-image">

                <!-- Image element will be added dynamically if needed -->
                </div>
            </div>
            <button class="imagination-start-button">Start</button>
        </div>

        {{!-- <div class="imagination-container-white" id="container2">
            <div class="imagination-content">
                <h1 class="imagination-title-white">
                    Bring Your <span class="highlight">Imagination</span><br>
                    to Life in <span class="highlight">3D</span>.
                </h1>
                <p class="imagination-subtitle">
                    Meshy Text to 3D helps you conceptualize, iterate, and experiment with text prompts to create 3D
                    models
                    in seconds.
                </p>
                <button class="imagination-start-button">Start</button>
            </div>
            <div class="imagination-model-preview-white">
                <video autoplay loop muted playsinline>
                    <source src="/videos/pencil.mp4" type="video/mp4">
                </video>
            </div>
        </div> --}}
    </div>
</section>

<script>
    // Add this at the beginning of your script
    function handleButtonVisibility() {
        const desktopButton = document.querySelector('.imagination-content .imagination-start-button');
        const mobileButton = document.querySelector('.imagination-container > .imagination-start-button');
        
        if (window.innerWidth <= 768) { // Mobile breakpoint
            if (desktopButton) desktopButton.style.display = 'none';
            if (mobileButton) mobileButton.style.display = 'block';
        } else { // Desktop/tablet
            if (desktopButton) desktopButton.style.display = 'block';
            if (mobileButton) mobileButton.style.display = 'none';
        }
    }

    // Call on page load
    document.addEventListener('DOMContentLoaded', handleButtonVisibility);
    
    // Call on window resize
    window.addEventListener('resize', handleButtonVisibility);

    // Function to wait for categories to be initialized if needed
    function ensureCategoriesInitialized() {
        // If categories are already initialized, return resolved promise
        if (window.categoriesInitialized) {
            return Promise.resolve();
        }
        
        // Otherwise, return a promise that resolves when the categories are ready
        return new Promise(resolve => {
            window.addEventListener('categoriesReady', () => {
                console.log('Categories ready event received in imagination component');
                resolve();
            });
        });
    }
    
    // Function to fetch content using category ID and slug
    async function fetchImaginationContentBySlug() {
        console.log('Imagination component initializing');
        
        // Wait for categories to be initialized
        await ensureCategoriesInitialized();
        console.log('Categories are ready, proceeding with imagination fetch');
        
        try {
            // Extract the slug from the URL path
            const urlPath = window.location.pathname;
            const pathSlug = urlPath.substring(1); // Remove the leading slash
            
            // Convert slug to camelCase for window key lookup
            const camelCaseKey = pathSlug.replace(/-./g, (match) => {
                return match[1].toUpperCase();
            });
            
            // Try to get the category ID from the window object
            const categoryId = window[`airbrush${camelCaseKey}`] ;
            console.log('Using category ID in imagination:', categoryId);
            
            // Dynamically determine the content slug based on the path
            let slug = 'hero-section'
            console.log(categoryId, slug, 'Using categoryId and slug for API request');
            
            const response = await fetch(`https://airbrush-admin-backend.onrender.com/api/content/category/${categoryId}/slug/${slug}`);
            if (!response.ok) {
                throw new Error(`Failed to fetch content by slug: ${response.status} ${response.statusText}`);
            }
            
            const content = await response.json();
            console.log('Hero section content loaded:', content);
            
            // Update the imagination section with the content
            updateImaginationContent(content);
        } catch (error) {
            console.error('Error fetching imagination content:', error);
        }
    }
    
    // Function to update the imagination section with the fetched content
    function updateImaginationContent(content) {
        if (!content) return;
        
        // Update title
        const titleElement = document.querySelector('.imagination-title');
        if (titleElement && content.title) {
            // Process title to add highlight spans for words in square brackets
            let processedTitle = content.title;
            
            // Replace words in square brackets with highlighted spans
            processedTitle = processedTitle.replace(/\[([^\]]+)\]/g, '<span class="highlight">$1</span>');
                
                // Add line break if not present and title is long enough
                if (!processedTitle.includes('<br>') && processedTitle.length > 20) {
                    const middleIndex = Math.floor(processedTitle.length / 2);
                    const spaceAfterMiddle = processedTitle.indexOf(' ', middleIndex);
                    if (spaceAfterMiddle !== -1) {
                        processedTitle = 
                            processedTitle.substring(0, spaceAfterMiddle) + 
                            '<br>' + 
                            processedTitle.substring(spaceAfterMiddle + 1);
                }
            }
            
            titleElement.innerHTML = processedTitle;
        }
        
        // Update subtitle
        const subtitleElement = document.querySelector('.imagination-subtitle');
        if (subtitleElement && content.subtitle) {
            subtitleElement.textContent = content.subtitle;
        }
        
        // Update media (video or image) if available in the response
        if (content.images && content.images.length > 0) {
            const previewContainer = document.querySelector('.imagination-model-preview');
            const galleryImage = document.querySelector('.hero-section-image');
            if (previewContainer) {
                console.log('Updating media with:', content.images[0]);
                
                // Get the media URL from the response
                const mediaUrl = content.images[0].url;
                
                // Check if the URL is for a video (ends with .mp4)
                const isVideo = mediaUrl.toLowerCase().endsWith('.mp4');
                
                if (isVideo) {
                    // Handle video content
                    let videoElement = previewContainer.querySelector('video');
                    
                    // If no video element exists yet, create one
                    if (!videoElement) {
                        videoElement = document.createElement('video');
                        videoElement.autoplay = true;
                        videoElement.loop = true;
                        videoElement.muted = true;
                        videoElement.playsinline = true;
                        previewContainer.appendChild(videoElement);
                        
                        // Create source element
                        const sourceElement = document.createElement('source');
                        videoElement.appendChild(sourceElement);
                    }
                    
                    // Update video source
                    const sourceElement = videoElement.querySelector('source');
                    if (sourceElement) {
                        sourceElement.src = mediaUrl;
                        sourceElement.type = 'video/mp4';
                        videoElement.style.display = 'block';
                        
                        // Hide any existing image element
                        const imgElement = previewContainer.querySelector('img');
                        if (imgElement) {
                            imgElement.style.display = 'none';
                        }
                        
                        // Force video reload
                        videoElement.load();
                    }
                } else {
                    // Handle image content
                    // If there's a video element, hide it
                    const videoElement = previewContainer.querySelector('video');
                    if (videoElement) {
                        videoElement.style.display = 'none';
                    }
                    
                    // Check if we already have an image element
                    let imgElement = galleryImage.querySelector('img');
                    
                    // If no image element exists yet, create one
                    if (!imgElement) {
                        imgElement = document.createElement('img');
                        imgElement.className = 'preview-image';
                        galleryImage.appendChild(imgElement);
                    }
                    
                    // Set the image properties
                    imgElement.src = mediaUrl;
                    imgElement.alt = content.title || '3D Model';
                    imgElement.style.display = 'block';
                    
                    // Add loading handlers for debugging
                    imgElement.onload = function() {
                        console.log('Image loaded successfully:', mediaUrl);
                    };
                    
                    imgElement.onerror = function() {
                        console.error('Failed to load image:', mediaUrl);
                        // If image fails to load, show the video as fallback
                        if (videoElement) {
                            videoElement.style.display = 'block';
                            imgElement.style.display = 'none';
                        }
                    };
                }
            }
        }
        
        // Update button text if needed
        const buttonElement = document.querySelector('.imagination-start-button');
        if (buttonElement && content.buttonText) {
            buttonElement.textContent = content.buttonText;
        }
        
        // Force a repaint to ensure everything is updated
        setTimeout(() => {
            const container = document.querySelector('.imagination-container');
            if (container) {
                container.style.opacity = '0.99';
                setTimeout(() => {
                    container.style.opacity = '1';
                }, 50);
            }
        }, 100);
    }
    
    // Call the function when the page loads
    document.addEventListener('DOMContentLoaded', fetchImaginationContentBySlug);
</script>