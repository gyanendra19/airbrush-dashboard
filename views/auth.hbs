<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login | Sign Up</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .auth-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding: 2rem 0;
        }
        
        .nav-tabs .nav-link {
            color: #6c757d;
        }
        
        .nav-tabs .nav-link.active {
            color: #0d6efd;
            font-weight: 500;
        }

        .card {
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.05);
        }

        .form-control:focus {
            box-shadow: none;
            border-color: #0d6efd;
        }

        .btn-primary {
            padding: 0.5rem 1rem;
        }

        /* Alert styles */
        .alert-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
            max-width: 500px;
        }

        .alert {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .alert.fade {
            animation: slideOut 0.3s ease-in;
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        /* Loading state */
        .btn-loading {
            position: relative;
            pointer-events: none;
        }

        .btn-loading::after {
            content: '';
            position: absolute;
            width: 1rem;
            height: 1rem;
            top: 50%;
            left: 50%;
            margin: -0.5rem -0.5rem;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top-color: white;
            border-radius: 50%;
            animation: spin 0.75s linear infinite;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
    <!-- Alert Container -->
    <div class="alert-container"></div>

    <div class="auth-container">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-6 col-lg-4">
                    <div class="card shadow-sm">
                        <div class="card-body p-4">
                            <!-- Logo or Brand -->
                            <div class="text-center mb-4">
                                <h4 class="text-primary">Airbrush Admin</h4>
                            </div>

                            <!-- Tabs -->
                            <ul class="nav nav-tabs mb-4" id="authTabs" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="login-tab" data-bs-toggle="tab" data-bs-target="#login" type="button" role="tab">Login</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="signup-tab" data-bs-toggle="tab" data-bs-target="#signup" type="button" role="tab">Sign Up</button>
                                </li>
                            </ul>

                            <!-- Tab Content -->
                            <div class="tab-content" id="authTabsContent">
                                <!-- Login Form -->
                                <div class="tab-pane fade show active" id="login" role="tabpanel">
                                    <form id="loginForm">
                                        <div class="mb-3">
                                            <label for="loginEmail" class="form-label">Email address</label>
                                            <input type="email" class="form-control" id="loginEmail" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="loginPassword" class="form-label">Password</label>
                                            <input type="password" class="form-control" id="loginPassword" required>
                                        </div>
                                        <button type="submit" class="btn btn-primary w-100" id="loginBtn">Login</button>
                                    </form>
                                </div>

                                <!-- Signup Form -->
                                <div class="tab-pane fade" id="signup" role="tabpanel">
                                    <form id="signupForm">
                                        <div class="mb-3">
                                            <label for="signupUsername" class="form-label">Username</label>
                                            <input type="text" class="form-control" id="signupUsername" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="signupEmail" class="form-label">Email address</label>
                                            <input type="email" class="form-control" id="signupEmail" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="signupPassword" class="form-label">Password</label>
                                            <input type="password" class="form-control" id="signupPassword" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="signupRole" class="form-label">Role</label>
                                            <select class="form-select" id="signupRole" required>
                                                <option value="admin">Admin</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn btn-primary w-100" id="signupBtn">Sign Up</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginForm = document.getElementById('loginForm');
            const signupForm = document.getElementById('signupForm');
            const loginBtn = document.getElementById('loginBtn');
            const signupBtn = document.getElementById('signupBtn');
            
            // Show alert function
            const showAlert = (message, type = 'success') => {
                const alertContainer = document.querySelector('.alert-container');
                const alertDiv = document.createElement('div');
                alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
                alertDiv.innerHTML = `
                    <strong>${type === 'success' ? 'Success!' : type === 'danger' ? 'Error!' : 'Note:'}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;
                
                alertContainer.appendChild(alertDiv);
                
                // Remove alert after 4 seconds
                setTimeout(() => {
                    alertDiv.classList.add('fade');
                    setTimeout(() => {
                        alertDiv.remove();
                    }, 300);
                }, 4000);
            };
            
            // Set cookie function
            const setCookie = (name, value, days) => {
                let expires = "";
                if (days) {
                    const date = new Date();
                    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                    expires = "; expires=" + date.toUTCString();
                }
                document.cookie = name + "=" + (value || "") + expires + "; path=/; SameSite=Strict";
            };
            
            // Handle login
            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('loginEmail').value;
                const password = document.getElementById('loginPassword').value;
                
                // Show loading state
                loginBtn.classList.add('btn-loading');
                loginBtn.disabled = true;
                
                try {
                    const response = await fetch('https://airbrush-admin-backend.onrender.com/api/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email, password })
                    });
                    
                    const data = await response.json();
                    
                    if (!response.ok) {
                        throw new Error(data.message || 'Login failed');
                    }
                    
                    if (data.token) {
                        // Set the token in a cookie that expires in 7 days
                        setCookie('authToken', data.token, 7);
                        // Redirect to dashboard
                        window.location.href = '/dashboard';
                    }
                } catch (error) {
                    console.error('Login error:', error);
                    showAlert(error.message || 'Login failed. Please try again.', 'danger');
                } finally {
                    // Reset button state
                    loginBtn.classList.remove('btn-loading');
                    loginBtn.disabled = false;
                }
            });
            
            // Handle signup
            signupForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const username = document.getElementById('signupUsername').value;
                const email = document.getElementById('signupEmail').value;
                const password = document.getElementById('signupPassword').value;
                const role = document.getElementById('signupRole').value;
                
                // Show loading state
                signupBtn.classList.add('btn-loading');
                signupBtn.disabled = true;
                
                try {
                    const response = await fetch('https://airbrush-admin-backend.onrender.com/api/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                            username,
                            email,
                            role,
                            password
                        })
                    });
                    
                    const data = await response.json();
                    
                    if (!response.ok) {
                        throw new Error(data.message || 'Registration failed');
                    }
                    
                    // Show success message
                    showAlert('Registration successful! Please login with your credentials.');
                    
                    // Clear the form
                    signupForm.reset();
                    
                    // Switch to login tab
                    const loginTab = document.getElementById('login-tab');
                    loginTab.click();
                    
                    // Pre-fill the email field in login form
                    document.getElementById('loginEmail').value = email;
                    
                } catch (error) {
                    console.error('Registration error:', error);
                    showAlert(error.message || 'Registration failed. Please try again.', 'danger');
                } finally {
                    // Reset button state
                    signupBtn.classList.remove('btn-loading');
                    signupBtn.disabled = false;
                }
            });
        });
    </script>
</body>
</html> 